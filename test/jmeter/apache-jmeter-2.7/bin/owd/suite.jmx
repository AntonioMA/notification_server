<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="FrontendServer1_uaws" elementType="Argument">
            <stringProp name="Argument.name">FrontendServer1_uaws</stringProp>
            <stringProp name="Argument.value">${__property(FrontendServer1_uaws)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="FrontendServer2_uaws" elementType="Argument">
            <stringProp name="Argument.name">FrontendServer2_uaws</stringProp>
            <stringProp name="Argument.value">${__property(FrontendServer2_uaws)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="FrontendServer1_nsas" elementType="Argument">
            <stringProp name="Argument.name">FrontendServer1_nsas</stringProp>
            <stringProp name="Argument.value">${__property(FrontendServer1_nsas)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="FrontendServer2_nsas" elementType="Argument">
            <stringProp name="Argument.name">FrontendServer2_nsas</stringProp>
            <stringProp name="Argument.value">${__property(FrontendServer2_nsas)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="FrontendServer1_nsuaudp" elementType="Argument">
            <stringProp name="Argument.name">FrontendServer1_nsuaudp</stringProp>
            <stringProp name="Argument.value">${__property(FrontendServer1_nsuaudp)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="FrontendServer2_nsuaudp" elementType="Argument">
            <stringProp name="Argument.name">FrontendServer2_nsuaudp</stringProp>
            <stringProp name="Argument.value">${__property(FrontendServer2_nsuaudp)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BackendServer1_db" elementType="Argument">
            <stringProp name="Argument.name">BackendServer1_db</stringProp>
            <stringProp name="Argument.value">${__property(BackendServer1_db)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BackendServer2_db" elementType="Argument">
            <stringProp name="Argument.name">BackendServer2_db</stringProp>
            <stringProp name="Argument.value">${__property(BackendServer2_db)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BackendServer3_db" elementType="Argument">
            <stringProp name="Argument.name">BackendServer3_db</stringProp>
            <stringProp name="Argument.value">${__property(BackendServer3_db)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BackendServer4_db" elementType="Argument">
            <stringProp name="Argument.name">BackendServer4_db</stringProp>
            <stringProp name="Argument.value">${__property(BackendServer4_db)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BackendServer1_nsmq" elementType="Argument">
            <stringProp name="Argument.name">BackendServer1_nsmq</stringProp>
            <stringProp name="Argument.value">${__property(BackendServer1_nsmq)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BackendServer2_nsmq" elementType="Argument">
            <stringProp name="Argument.name">BackendServer2_nsmq</stringProp>
            <stringProp name="Argument.value">${__property(BackendServer2_nsmq)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BackendServer1_nsmon" elementType="Argument">
            <stringProp name="Argument.name">BackendServer1_nsmon</stringProp>
            <stringProp name="Argument.value">${__property(BackendServer1_nsmon)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BackendServer2_nsmon" elementType="Argument">
            <stringProp name="Argument.name">BackendServer2_nsmon</stringProp>
            <stringProp name="Argument.value">${__property(BackendServer2_nsmon)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TEST_hello_reg_threads" elementType="Argument">
            <stringProp name="Argument.name">TEST_hello_reg_threads</stringProp>
            <stringProp name="Argument.value">${__property(TEST_hello_reg_threads)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TEST_hello_reg_iterations" elementType="Argument">
            <stringProp name="Argument.name">TEST_hello_reg_iterations</stringProp>
            <stringProp name="Argument.value">${__property(TEST_hello_reg_iterations)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TEST_sendnotifications_threads" elementType="Argument">
            <stringProp name="Argument.name">TEST_sendnotifications_threads</stringProp>
            <stringProp name="Argument.value">${__property(TEST_sendnotifications_threads)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TEST_sendnotifications_duration" elementType="Argument">
            <stringProp name="Argument.name">TEST_sendnotifications_duration</stringProp>
            <stringProp name="Argument.value">${__property(TEST_sendnotifications_duration)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ResultsPath" elementType="Argument">
            <stringProp name="Argument.name">ResultsPath</stringProp>
            <stringProp name="Argument.value">${__property(ResultsPath)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables for jMeter" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="TEST_hello_reg_threads" elementType="Argument">
            <stringProp name="Argument.name">TEST_hello_reg_threads</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.desc">Number of virtual users for the Hello test</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TEST_hello_reg_iterations" elementType="Argument">
            <stringProp name="Argument.name">TEST_hello_reg_iterations</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.desc">Duration of the Hello test</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TEST_sendnotifications_threads" elementType="Argument">
            <stringProp name="Argument.name">TEST_sendnotifications_threads</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.desc">Number of virtual users sending notifications</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TEST_sendnotifications_duration" elementType="Argument">
            <stringProp name="Argument.name">TEST_sendnotifications_duration</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.desc">Duration of the send notifications test</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TEST_floodingNotifications_duration" elementType="Argument">
            <stringProp name="Argument.name">TEST_floodingNotifications_duration</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.desc">Duration of the flood notifications test</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TEST_floodingNotifications_connections" elementType="Argument">
            <stringProp name="Argument.name">TEST_floodingNotifications_connections</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.desc">Number of connections opened</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TEST_floodingNotifications_monitor" elementType="Argument">
            <stringProp name="Argument.name">TEST_floodingNotifications_monitor</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Number of queries of connections opened during the test, as checks lasts 10 seconds, it should be correlated with test duration</stringProp>
          </elementProp>
          <elementProp name="TEST_floodingNotifications_start" elementType="Argument">
            <stringProp name="Argument.name">TEST_floodingNotifications_start</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.desc">Indicates if flood notification test should start or not</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ResultsPath" elementType="Argument">
            <stringProp name="Argument.name">ResultsPath</stringProp>
            <stringProp name="Argument.value">report</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Path to store the results relative to jmeter binary</stringProp>
          </elementProp>
          <elementProp name="jmeterengine.startlistenerslater" elementType="Argument">
            <stringProp name="Argument.name">jmeterengine.startlistenerslater</stringProp>
            <stringProp name="Argument.value">false</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="Hello &amp; Channel Registration Fe1 and Fe2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">${TEST_hello_reg_threads}</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">1</stringProp>
        <stringProp name="Start users period">60</stringProp>
        <stringProp name="Stop users count">1</stringProp>
        <stringProp name="Stop users period">60</stringProp>
        <stringProp name="flighttime">${TEST_hello_reg_iterations}</stringProp>
        <stringProp name="rampUp">0</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador Bucle" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Hello Fe1" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;messageType&quot;: &quot;hello&quot;,&quot;uaid&quot;: null,&quot;idTest&quot;:&quot;${idTest}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8888</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/websocket</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">This is the basic hello message to get a valid UAID</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BSFPreProcessor guiclass="TestBeanGUI" testclass="BSFPreProcessor" testname="idTest" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">var idTest=Math.floor(Math.random()*10000001);
vars.put(&quot;idTest&quot;,idTest);</stringProp>
            <stringProp name="scriptLanguage">javascript</stringProp>
          </BSFPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check hello" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1908789522">\{&quot;messageType&quot;:&quot;hello&quot;,&quot;uaid&quot;:&quot;.+?&quot;,&quot;status&quot;:.+?\}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If register is ok Fe1" enabled="true">
          <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Write idTest to disk" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA"></stringProp>
            <stringProp name="RESPONSE_DATA">${idTest}</stringProp>
            <stringProp name="RESPONSE_TIME">0</stringProp>
            <stringProp name="LATENCY">0</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree>
            <kg.apc.jmeter.reporters.FlexibleFileWriter guiclass="kg.apc.jmeter.reporters.FlexibleFileWriterGui" testclass="kg.apc.jmeter.reporters.FlexibleFileWriter" testname="Write idTest to text file" enabled="true">
              <stringProp name="filename">${ResultsPath}/id_Test.csv</stringProp>
              <stringProp name="columns">responseData|\r\n</stringProp>
              <boolProp name="overwrite">false</boolProp>
              <stringProp name="header"></stringProp>
              <stringProp name="footer"></stringProp>
            </kg.apc.jmeter.reporters.FlexibleFileWriter>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">100</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Channel registration Fe1" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;messageType&quot;:&quot;register&quot;,&quot;channelID&quot;:&quot;${idTest}&quot;,&quot;idTest&quot;:&quot;${idTest}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8888</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/websocket</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">This is the basic registration message to get your channel ID registered</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check register" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="123705038">\{&quot;messageType&quot;:&quot;register&quot;,&quot;status&quot;:.+?,&quot;pushEndpoint&quot;:&quot;https:\/\/.+?&quot;,&quot;channelID&quot;:&quot;.+?&quot;\}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract channel" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">URL</stringProp>
            <stringProp name="RegexExtractor.regex">\{&quot;messageType&quot;:&quot;register&quot;,&quot;status&quot;:.+?,&quot;pushEndpoint&quot;:&quot;https:\/\/(.+?):(.+?)\/(.+?)&quot;,&quot;channelID&quot;:&quot;(.+?)&quot;\}</stringProp>
            <stringProp name="RegexExtractor.template">$1$,$2$,$3$,$4</stringProp>
            <stringProp name="RegexExtractor.default">failed</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If channel is ok Fe1" enabled="true">
          <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Write channelID to disk" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA"></stringProp>
            <stringProp name="RESPONSE_DATA">${URL}</stringProp>
            <stringProp name="RESPONSE_TIME">0</stringProp>
            <stringProp name="LATENCY">0</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree>
            <kg.apc.jmeter.reporters.FlexibleFileWriter guiclass="kg.apc.jmeter.reporters.FlexibleFileWriterGui" testclass="kg.apc.jmeter.reporters.FlexibleFileWriter" testname="Write channelID to text file" enabled="true">
              <stringProp name="filename">${ResultsPath}/channelID_URL.csv</stringProp>
              <stringProp name="columns">responseData|\r\n</stringProp>
              <boolProp name="overwrite">false</boolProp>
              <stringProp name="header"></stringProp>
              <stringProp name="footer"></stringProp>
            </kg.apc.jmeter.reporters.FlexibleFileWriter>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Hello Fe2" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;messageType&quot;: &quot;hello&quot;,&quot;uaid&quot;: null,&quot;idTest&quot;:&quot;${idTest}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8889</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/websocket</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">This is the basic hello message to get a valid UAID</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BSFPreProcessor guiclass="TestBeanGUI" testclass="BSFPreProcessor" testname="idTest" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">var idTest=Math.floor(Math.random()*10000001);
vars.put(&quot;idTest&quot;,idTest);</stringProp>
            <stringProp name="scriptLanguage">javascript</stringProp>
          </BSFPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check hello" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1908789522">\{&quot;messageType&quot;:&quot;hello&quot;,&quot;uaid&quot;:&quot;.+?&quot;,&quot;status&quot;:.+?\}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If register is ok Fe2" enabled="true">
          <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Write idTest to disk" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA"></stringProp>
            <stringProp name="RESPONSE_DATA">${idTest}</stringProp>
            <stringProp name="RESPONSE_TIME">0</stringProp>
            <stringProp name="LATENCY">0</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree>
            <kg.apc.jmeter.reporters.FlexibleFileWriter guiclass="kg.apc.jmeter.reporters.FlexibleFileWriterGui" testclass="kg.apc.jmeter.reporters.FlexibleFileWriter" testname="Write idTest to text file" enabled="true">
              <stringProp name="filename">${ResultsPath}/id_Test.csv</stringProp>
              <stringProp name="columns">responseData|\r\n</stringProp>
              <boolProp name="overwrite">false</boolProp>
              <stringProp name="header"></stringProp>
              <stringProp name="footer"></stringProp>
            </kg.apc.jmeter.reporters.FlexibleFileWriter>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">100</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Channel registration Fe2" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;messageType&quot;:&quot;register&quot;,&quot;channelID&quot;:&quot;${idTest}&quot;,&quot;idTest&quot;:&quot;${idTest}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8889</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/websocket</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">This is the basic registration message to get your channel ID registered</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Check register" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="123705038">\{&quot;messageType&quot;:&quot;register&quot;,&quot;status&quot;:.+?,&quot;pushEndpoint&quot;:&quot;https:\/\/.+?&quot;,&quot;channelID&quot;:&quot;.+?&quot;\}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Extract channel" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">URL</stringProp>
            <stringProp name="RegexExtractor.regex">\{&quot;messageType&quot;:&quot;register&quot;,&quot;status&quot;:.+?,&quot;pushEndpoint&quot;:&quot;https:\/\/(.+?):(.+?)\/(.+?)&quot;,&quot;channelID&quot;:&quot;(.+?)&quot;\}</stringProp>
            <stringProp name="RegexExtractor.template">$1$,$2$,$3$,$4</stringProp>
            <stringProp name="RegexExtractor.default">failed</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If channel is ok Fe2" enabled="true">
          <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Write channelID to disk" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA"></stringProp>
            <stringProp name="RESPONSE_DATA">${URL}</stringProp>
            <stringProp name="RESPONSE_TIME">0</stringProp>
            <stringProp name="LATENCY">0</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree>
            <kg.apc.jmeter.reporters.FlexibleFileWriter guiclass="kg.apc.jmeter.reporters.FlexibleFileWriterGui" testclass="kg.apc.jmeter.reporters.FlexibleFileWriter" testname="Write channelID to text file" enabled="true">
              <stringProp name="filename">${ResultsPath}/channelID_URL.csv</stringProp>
              <stringProp name="columns">responseData|\r\n</stringProp>
              <boolProp name="overwrite">false</boolProp>
              <stringProp name="header"></stringProp>
              <stringProp name="footer"></stringProp>
            </kg.apc.jmeter.reporters.FlexibleFileWriter>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Send notifications Fe1 and Fe2" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador Bucle" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${TEST_sendnotifications_duration}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${TEST_sendnotifications_threads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1363014360000</longProp>
        <longProp name="ThreadGroup.end_time">1363014360000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Read Channel Id and URL" enabled="true">
          <stringProp name="filename">${ResultsPath}/channelID_URL.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">IP,port,URL,channelID</stringProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">Todos los hilos</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Notification" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">version=12</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${IP}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">HTTPS</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${URL}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="Flood notifications" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">${TEST_floodingNotifications_start}</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">0</stringProp>
        <stringProp name="Start users period">0</stringProp>
        <stringProp name="Stop users count">0</stringProp>
        <stringProp name="Stop users period">0</stringProp>
        <stringProp name="flighttime">1</stringProp>
        <stringProp name="rampUp">0</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador Bucle" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="Flooding notifications" enabled="true">
          <stringProp name="TestPlan.comments">This ssh command executes a flooding script to verify how many simultaneous notifications can be handled by the whole system</stringProp>
          <stringProp name="hostname">${FrontendServer1_uaws}</stringProp>
          <intProp name="port">22</intProp>
          <stringProp name="username">cmartinez</stringProp>
          <stringProp name="password">U7UtzfgJnXyK</stringProp>
          <stringProp name="command">nohup node test/jmeter_auxtools/flood-push-server.js ${FrontendServer1_uaws} 8080 ${TEST_floodingNotifications_connections} 1000 100 1000 ${TEST_floodingNotifications_duration} &amp;&gt; ./flood_notification.out</stringProp>
        </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="Monitoring flood notifications" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">0</stringProp>
        <stringProp name="Start users period">0</stringProp>
        <stringProp name="Stop users count">0</stringProp>
        <stringProp name="Stop users period">0</stringProp>
        <stringProp name="flighttime">300</stringProp>
        <stringProp name="rampUp">5</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Controlador Bucle" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <org.apache.jmeter.protocol.ssh.sampler.SSHSampler guiclass="TestBeanGUI" testclass="org.apache.jmeter.protocol.ssh.sampler.SSHSampler" testname="netstat" enabled="true">
          <stringProp name="TestPlan.comments">Command to monitor the number of opened connections to manage notifications</stringProp>
          <stringProp name="hostname">${FrontendServer1_uaws}</stringProp>
          <intProp name="port">22</intProp>
          <stringProp name="username">cmartinez</stringProp>
          <stringProp name="password">U7UtzfgJnXyK</stringProp>
          <stringProp name="command">./connections_and_date.sh</stringProp>
        </org.apache.jmeter.protocol.ssh.sampler.SSHSampler>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="RE: get number of opened connections" enabled="true">
            <stringProp name="TestPlan.comments">We obtain the number of opened connections at any time in 8080 port between </stringProp>
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">connections</stringProp>
            <stringProp name="RegexExtractor.regex">.*</stringProp>
            <stringProp name="RegexExtractor.template">$0$</stringProp>
            <stringProp name="RegexExtractor.default">failed</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="Write number of connections to disk" enabled="true">
          <boolProp name="WAITING">false</boolProp>
          <boolProp name="SUCCESFULL">true</boolProp>
          <stringProp name="RESPONSE_CODE"></stringProp>
          <stringProp name="RESPONSE_MESSAGE"></stringProp>
          <stringProp name="REQUEST_DATA"></stringProp>
          <stringProp name="RESPONSE_DATA">${connections}</stringProp>
          <stringProp name="RESPONSE_TIME"></stringProp>
          <stringProp name="LATENCY"></stringProp>
        </kg.apc.jmeter.samplers.DummySampler>
        <hashTree>
          <kg.apc.jmeter.reporters.FlexibleFileWriter guiclass="kg.apc.jmeter.reporters.FlexibleFileWriterGui" testclass="kg.apc.jmeter.reporters.FlexibleFileWriter" testname="Write number of connections to text file" enabled="true">
            <stringProp name="filename">${ResultsPath}/connections.csv</stringProp>
            <stringProp name="columns">responseData|\r\n</stringProp>
            <boolProp name="overwrite">false</boolProp>
            <stringProp name="header"></stringProp>
            <stringProp name="footer"></stringProp>
          </kg.apc.jmeter.reporters.FlexibleFileWriter>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="Monitoring" enabled="false"/>
      <hashTree>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Metrics for localhost" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${ResultsPath}/localhost_${__time(yyyyMMdd,)}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="917712290">
              <stringProp name="-1204607085">localhost</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1383002031">
              <stringProp name="-1204607085">localhost</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1270662015">
              <stringProp name="-1204607085">localhost</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-723468740">
              <stringProp name="-1204607085">localhost</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2590131">Swap</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1395881884">
              <stringProp name="-1204607085">localhost</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="82881">TCP</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Metrics for FrontendServer1_uaws" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${ResultsPath}/${FrontendServer1_uaws}_${__time(yyyyMMdd,)}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-924698578">
              <stringProp name="1278699387">${FrontendServer1_uaws}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="1069554397">
              <stringProp name="1278699387">${FrontendServer1_uaws}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="1181894413">
              <stringProp name="1278699387">${FrontendServer1_uaws}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="1729087688">
              <stringProp name="1278699387">${FrontendServer1_uaws}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2590131">Swap</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1336403648">
              <stringProp name="1278699387">${FrontendServer1_uaws}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2112896831">Disks I/O</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="687130885">
              <stringProp name="2121474907">${FrontendServer1_uaws}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="82881">TCP</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Metrics for FrontendServer2_uaws" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${ResultsPath}/${FrontendServer2_uaws}_${__time(yyyyMMdd,)}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="1631305274">
              <stringProp name="-2128764228">${FrontendServer2_uaws}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-669409047">
              <stringProp name="-2128764228">${FrontendServer2_uaws}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-557069031">
              <stringProp name="-2128764228">${FrontendServer2_uaws}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-9875756">
              <stringProp name="-2128764228">${FrontendServer2_uaws}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2590131">Swap</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="1562646000">
              <stringProp name="-1285988708">${FrontendServer2_uaws}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="82881">TCP</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Metrics for FrontendServer1_nsas" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${ResultsPath}/${FrontendServer1_nsas}_${__time(yyyyMMdd,)}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="727298759">
              <stringProp name="2115525356">${FrontendServer1_nsas}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1266954216">
              <stringProp name="2115525356">${FrontendServer1_nsas}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="839638775">
              <stringProp name="2115525356">${FrontendServer1_nsas}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="1386832050">
              <stringProp name="2115525356">${FrontendServer1_nsas}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2590131">Swap</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="714418906">
              <stringProp name="2115525356">${FrontendServer1_nsas}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="82881">TCP</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Metrics for FrontendServer2_nsas" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${ResultsPath}/${FrontendServer2_nsas}_${__time(yyyyMMdd,)}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="550778507">
              <stringProp name="-1291938259">${FrontendServer2_nsas}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1443474468">
              <stringProp name="-1291938259">${FrontendServer2_nsas}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="663118523">
              <stringProp name="-1291938259">${FrontendServer2_nsas}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="1210311798">
              <stringProp name="-1291938259">${FrontendServer2_nsas}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2590131">Swap</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="537898654">
              <stringProp name="-1291938259">${FrontendServer2_nsas}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="82881">TCP</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Metrics for FrontendServer1_nsuaudp" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${ResultsPath}/${FrontendServer1_nsuaudp}_${__time(yyyyMMdd,)}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-1389968609">
              <stringProp name="-178399897">${FrontendServer1_nsuaudp}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="910745712">
              <stringProp name="-178399897">${FrontendServer1_nsuaudp}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1277628593">
              <stringProp name="-178399897">${FrontendServer1_nsuaudp}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-730435318">
              <stringProp name="-178399897">${FrontendServer1_nsuaudp}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2590131">Swap</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1402848462">
              <stringProp name="-178399897">${FrontendServer1_nsuaudp}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="82881">TCP</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Metrics for FrontendServer2_nsuaudp" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${ResultsPath}/${FrontendServer2_nsuaudp}_${__time(yyyyMMdd,)}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="581781618">
              <stringProp name="-374913402">${FrontendServer2_nsuaudp}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1412471357">
              <stringProp name="-374913402">${FrontendServer2_nsuaudp}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="694121634">
              <stringProp name="-374913402">${FrontendServer2_nsuaudp}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="1241314909">
              <stringProp name="-374913402">${FrontendServer2_nsuaudp}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2590131">Swap</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="568901765">
              <stringProp name="-374913402">${FrontendServer2_nsuaudp}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="82881">TCP</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Metrics for BackendServer1_db" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${ResultsPath}/${BackendServer1_db}_${__time(yyyyMMdd,)}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-167645809">
              <stringProp name="965307217">${BackendServer1_db}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="2133068512">
              <stringProp name="965307217">${BackendServer1_db}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-55305793">
              <stringProp name="965307217">${BackendServer1_db}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="491887482">
              <stringProp name="965307217">${BackendServer1_db}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2590131">Swap</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-180525662">
              <stringProp name="965307217">${BackendServer1_db}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="82881">TCP</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Metrics for BackendServer2_db" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${ResultsPath}/${BackendServer2_db}_${__time(yyyyMMdd,)}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="69538462">
              <stringProp name="966230738">${BackendServer2_db}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1924714513">
              <stringProp name="966230738">${BackendServer2_db}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="181878478">
              <stringProp name="966230738">${BackendServer2_db}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="729071753">
              <stringProp name="966230738">${BackendServer2_db}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2590131">Swap</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="56658609">
              <stringProp name="966230738">${BackendServer2_db}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="82881">TCP</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Metrics for BackendServer3_db" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${ResultsPath}/${BackendServer3_db}_${__time(yyyyMMdd,)}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-1318856197">
              <stringProp name="967154259">${BackendServer3_db}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="981858124">
              <stringProp name="967154259">${BackendServer3_db}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1206516181">
              <stringProp name="967154259">${BackendServer3_db}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-659322906">
              <stringProp name="967154259">${BackendServer3_db}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2590131">Swap</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1331736050">
              <stringProp name="967154259">${BackendServer3_db}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="82881">TCP</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Metrics for BackendServer4_db" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${ResultsPath}/${BackendServer4_db}_${__time(yyyyMMdd,)}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="840850200">
              <stringProp name="968077780">${BackendServer4_db}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1153402775">
              <stringProp name="968077780">${BackendServer4_db}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="953190216">
              <stringProp name="968077780">${BackendServer4_db}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="1500383491">
              <stringProp name="968077780">${BackendServer4_db}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2590131">Swap</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="827970347">
              <stringProp name="968077780">${BackendServer4_db}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="82881">TCP</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Metrics for BackendServer1_nsmq" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${ResultsPath}/${BackendServer1_nsmq}_${__time(yyyyMMdd,)}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-1329726988">
              <stringProp name="-42970490">${BackendServer1_nsmq}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="970987333">
              <stringProp name="-42970490">${BackendServer1_nsmq}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1217386972">
              <stringProp name="-42970490">${BackendServer1_nsmq}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-670193697">
              <stringProp name="-42970490">${BackendServer1_nsmq}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2590131">Swap</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1342606841">
              <stringProp name="-42970490">${BackendServer1_nsmq}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="82881">TCP</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Metrics for BackendServer2_nsmq" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${ResultsPath}/${BackendServer2_nsmq}_${__time(yyyyMMdd,)}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-361987957">
              <stringProp name="844533191">${BackendServer2_nsmq}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="1938726364">
              <stringProp name="844533191">${BackendServer2_nsmq}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-249647941">
              <stringProp name="844533191">${BackendServer2_nsmq}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="297545334">
              <stringProp name="844533191">${BackendServer2_nsmq}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2590131">Swap</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-374867810">
              <stringProp name="844533191">${BackendServer2_nsmq}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="82881">TCP</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Metrics for BackendServer1_nsmon" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${ResultsPath}/${BackendServer1_nsmon}_${__time(yyyyMMdd,)}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-19394790">
              <stringProp name="-1332087452">${BackendServer1_nsmon}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-2013647765">
              <stringProp name="-1332087452">${BackendServer1_nsmon}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="92945226">
              <stringProp name="-1332087452">${BackendServer1_nsmon}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="640138501">
              <stringProp name="-1332087452">${BackendServer1_nsmon}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2590131">Swap</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-32274643">
              <stringProp name="-1332087452">${BackendServer1_nsmon}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="82881">TCP</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
        <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="Metrics for BackendServer2_nsmon" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">${ResultsPath}/${BackendServer2_nsmon}_${__time(yyyyMMdd,)}.csv</stringProp>
          <longProp name="interval_grouping">1000</longProp>
          <boolProp name="graph_aggregated">false</boolProp>
          <stringProp name="include_sample_labels"></stringProp>
          <stringProp name="exclude_sample_labels"></stringProp>
          <collectionProp name="metricConnections">
            <collectionProp name="-1812285344">
              <stringProp name="410722883">${BackendServer2_nsmon}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-1993889503">Memory</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="488428977">
              <stringProp name="410722883">${BackendServer2_nsmon}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="66952">CPU</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1699945328">
              <stringProp name="410722883">${BackendServer2_nsmon}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="-274342153">Network I/O</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1152752053">
              <stringProp name="410722883">${BackendServer2_nsmon}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="2590131">Swap</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
            <collectionProp name="-1825165197">
              <stringProp name="410722883">${BackendServer2_nsmon}</stringProp>
              <stringProp name="1600768">4444</stringProp>
              <stringProp name="82881">TCP</stringProp>
              <stringProp name="0"></stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.perfmon.PerfMonCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Simple Data Writer" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
